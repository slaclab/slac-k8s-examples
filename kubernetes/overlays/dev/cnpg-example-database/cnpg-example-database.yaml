apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: example-db
  namespace: cnpg-example
spec:
  instances: 2
  primaryUpdateStrategy: unsupervised
  enablePDB: false

  bootstrap:
    initdb:
      database: example
      owner: app
      secret:
        name: exampledb-creds
      postInitSQL:
        - "CREATE EXTENSION pg_sphere;"
  
  imageName:  ghcr.io/lsst-sqre/cnpg-postgres-images:17.5
  inheritedMetadata:
    annotations:
      prometheus.io/scrape: 'true' 

  monitoring:
    enablePodMonitor: true

  nodeMaintenanceWindow:
    reusePVC: true

  postgresql:
    parameters:
        dynamic_shared_memory_type: posix
        log_destination: csvlog
        log_directory: /controller/log
        log_disconnections: "off"
        log_duration: "off"
        log_filename: postgres
        log_min_duration_statement: 250ms
        log_rotation_age: "0"
        log_rotation_size: "0"
        log_statement: "none"
        log_temp_files: "1"
        log_truncate_on_rotation: "false"
        logging_collector: "on"
        maintenance_work_mem: 12GB
        max_connections: "2000"
        max_parallel_workers: "32"
        max_replication_slots: "32"
        max_wal_size: 32GB
        max_worker_processes: "32"
        min_wal_size: 16GB
        pg_stat_statements.track: "none"
        random_page_cost: "1.1"
        shared_buffers: 8GB
        wal_keep_size: 16GB
        wal_receiver_timeout: 5s
        wal_sender_timeout: 5s
        work_mem: 320MB
        max_slot_wal_keep_size: "32GB"
        wal_compression: "off"
       
  resources:
    requests:
      memory: 16Gi
      cpu: 4
    limits:
      memory: 32Gi
      cpu: 8 

  storage:
    storageClass: wekafs--sdf-k8s01
    size: 100Gi
